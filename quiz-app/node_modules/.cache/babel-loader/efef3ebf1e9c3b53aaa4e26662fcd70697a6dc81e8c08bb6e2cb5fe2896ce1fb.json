{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\source\\\\React\\\\quiz-app\\\\src\\\\component\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { createAPIEndpoint, ENDPOINTS, BASE_URL } from '../api';\nimport useStateContext from '../hooks/useStateContext';\nimport { Card, CardContent, CardMedia, CardHeader, List, ListItemButton, Typography, Box, LinearProgress } from '@mui/material';\nimport { getFormatedTime } from '../helper';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n  const [qns, setQns] = useState([]);\n  const [qnIndex, setQnIndex] = useState(0);\n  const [timeTaken, setTimeTaken] = useState(0);\n  const {\n    context,\n    setContext\n  } = useStateContext();\n  const navigate = useNavigate();\n  let timer;\n  const startTimer = () => {\n    timer = setInterval(() => {\n      setTimeTaken(prev => prev + 1);\n    }, [1000]);\n  };\n  useEffect(() => {\n    setContext({\n      timeTaken: 0,\n      selectedOptions: []\n    });\n    createAPIEndpoint(ENDPOINTS.question).fetch().then(res => {\n      setQns(res.data);\n      startTimer();\n    }).catch(err => {\n      console.log(err);\n    });\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  const updateAnswer = (qnId, optionIdx) => {\n    const temp = [...context.selectedOptions];\n    temp.push({\n      qnId,\n      selected: optionIdx\n    });\n    if (qnIndex < 4) {\n      setContext({\n        selectedOptions: [...temp]\n      });\n      setQnIndex(qnIndex + 1);\n    } else {\n      setContext({\n        selectedOptions: [...temp],\n        timeTaken\n      });\n      navigate(\"/result\");\n    }\n  };\n  return qns.length != 0 ? /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 640,\n      mx: 'auto',\n      mt: 5,\n      '& .MuiCardHeader-action': {\n        m: 0,\n        alignSelf: 'center'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: 'Question ' + (qnIndex + 1) + ' of 5',\n      action: /*#__PURE__*/_jsxDEV(Typography, {\n        children: getFormatedTime(timeTaken)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: (qnIndex + 1) * 100 / 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), qns[qnIndex].imageName != null ? /*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      image: BASE_URL + 'images/' + qns[qnIndex].imageName,\n      sx: {\n        width: 'auto',\n        m: '10px auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }, this) : null, /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: qns[qnIndex].qnInWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: qns[qnIndex].options.map((item, idx) => /*#__PURE__*/_jsxDEV(ListItemButton, {\n          disableRipple: true,\n          onClick: () => updateAnswer(qns[qnIndex].qnId, idx),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: String.fromCharCode(65 + idx) + \" . \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), item]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 15\n  }, this) : null;\n}\n_s(Quiz, \"1EAzsFjQwLX+5Oht8XiO9SmikHE=\", false, function () {\n  return [useStateContext, useNavigate];\n});\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","createAPIEndpoint","ENDPOINTS","BASE_URL","useStateContext","Card","CardContent","CardMedia","CardHeader","List","ListItemButton","Typography","Box","LinearProgress","getFormatedTime","useNavigate","Quiz","qns","setQns","qnIndex","setQnIndex","timeTaken","setTimeTaken","context","setContext","navigate","timer","startTimer","setInterval","prev","selectedOptions","question","fetch","then","res","data","catch","err","console","log","clearInterval","updateAnswer","qnId","optionIdx","temp","push","selected","length","maxWidth","mx","mt","m","alignSelf","imageName","width","qnInWords","options","map","item","idx","String","fromCharCode"],"sources":["C:/Users/User/source/React/quiz-app/src/component/Quiz.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { createAPIEndpoint, ENDPOINTS, BASE_URL } from '../api'\r\nimport useStateContext from '../hooks/useStateContext'\r\nimport { Card, CardContent, CardMedia, CardHeader, List, ListItemButton, Typography, Box, LinearProgress } from '@mui/material'\r\nimport { getFormatedTime } from '../helper'\r\nimport { useNavigate } from 'react-router'\r\n\r\nexport default function Quiz() {\r\n\r\n    const [qns, setQns] = useState([])\r\n    const [qnIndex, setQnIndex] = useState(0)\r\n    const [timeTaken, setTimeTaken] = useState(0)\r\n    const { context, setContext } = useStateContext()\r\n    const navigate = useNavigate()\r\n\r\n    let timer;\r\n\r\n    const startTimer = () => {\r\n        timer = setInterval(() => {\r\n            setTimeTaken(prev => prev + 1)\r\n        }, [1000])\r\n    }\r\n\r\n    useEffect(() => {\r\n        setContext({\r\n            timeTaken: 0,\r\n            selectedOptions: []\r\n        })\r\n        createAPIEndpoint(ENDPOINTS.question)\r\n            .fetch() \r\n            .then(res => {\r\n                setQns(res.data)\r\n                startTimer()\r\n            })\r\n            .catch(err => { console.log(err); })\r\n\r\n        return () => { clearInterval(timer) }\r\n    }, [])\r\n\r\n    const updateAnswer = (qnId, optionIdx) => {\r\n        const temp = [...context.selectedOptions]\r\n        temp.push({\r\n            qnId,\r\n            selected: optionIdx\r\n        })\r\n        if (qnIndex < 4) {\r\n            setContext({ selectedOptions: [...temp] })\r\n            setQnIndex(qnIndex + 1)\r\n        }\r\n        else {\r\n            setContext({ selectedOptions: [...temp], timeTaken })\r\n            navigate(\"/result\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        qns.length != 0\r\n            ? <Card\r\n                sx={{\r\n                    maxWidth: 640, mx: 'auto', mt: 5,\r\n                    '& .MuiCardHeader-action': { m: 0, alignSelf: 'center' }\r\n                }}>\r\n                <CardHeader\r\n                    title={'Question ' + (qnIndex + 1) + ' of 5'}\r\n                    action={<Typography>{getFormatedTime(timeTaken)}</Typography>} />\r\n                <Box>\r\n                    <LinearProgress variant=\"determinate\" value={(qnIndex + 1) * 100 / 5} />\r\n                </Box>\r\n                {qns[qnIndex].imageName != null\r\n                    ? <CardMedia\r\n                        component=\"img\"\r\n                        image={BASE_URL + 'images/' + qns[qnIndex].imageName}\r\n                        sx={{ width: 'auto', m: '10px auto' }} />\r\n                    : null}\r\n                <CardContent>\r\n                    <Typography variant=\"h6\">\r\n                        {qns[qnIndex].qnInWords}\r\n                    </Typography>\r\n                    <List>\r\n                        {qns[qnIndex].options.map((item, idx) =>\r\n                            <ListItemButton disableRipple key={idx} onClick={() => updateAnswer(qns[qnIndex].qnId, idx)}>\r\n                                <div>\r\n                                    <b>{String.fromCharCode(65 + idx) + \" . \"}</b>{item}\r\n                                </div>\r\n\r\n                            </ListItemButton>\r\n                        )}\r\n\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n            : null\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}