{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\source\\\\React\\\\quiz-app\\\\src\\\\component\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { Box, Button, Card, CardContent, TextField, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport { createAPIEndpoint, ENDPOINTS } from '../api';\nimport useForm from '../hooks/useForm';\nimport useStateContext from '../hooks/useStateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getFreshModel = () => ({\n  name: '',\n  email: ''\n});\nexport default function Login() {\n  _s();\n  const {\n    context,\n    setContext\n  } = useStateContext();\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange\n  } = useForm(getFreshModel);\n  const Login = e => {\n    e.preventDefault();\n    if (validate()) createAPIEndpoint(ENDPOINTS.participant).post(values).then(res => {\n      setContext({\n        participantId: res.data.participantId\n      });\n    }).catch(err => console.log(err));\n  };\n  const validate = () => {\n    let temp = {};\n    temp.email = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email) ? \"\" : \"Email is not valid.\";\n    temp.name = values.name != \"\" ? \"\" : \"This field is required.\";\n    setErrors(temp);\n    return Object.values(temp).every(x => x == \"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [context.participantId, /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: 400\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          sx: {\n            my: 3\n          },\n          children: \"Quiz App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            '& .MuiTextField-root': {\n              m: 1,\n              width: '90%'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"on\",\n            onSubmit: Login,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              name: \"email\",\n              value: values.email,\n              onChange: handleInputChange,\n              variant: \"outlined\",\n              ...(errors.email && {\n                error: true,\n                helperText: errors.email\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name\",\n              name: \"name\",\n              value: values.name,\n              onChange: handleInputChange,\n              variant: \"outlined\",\n              ...(errors.name && {\n                error: true,\n                helperText: errors.name\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"large\",\n              sx: {\n                width: '90'\n              },\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"WcnG0E4E4JyMMf40dsHieBod8bA=\", false, function () {\n  return [useStateContext, useForm];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Box","Button","Card","CardContent","TextField","Typography","React","useState","createAPIEndpoint","ENDPOINTS","useForm","useStateContext","getFreshModel","name","email","Login","context","setContext","values","setValues","errors","setErrors","handleInputChange","e","preventDefault","validate","participant","post","then","res","participantId","data","catch","err","console","log","temp","test","Object","every","x","width","textAlign","my","m","error","helperText"],"sources":["C:/Users/User/source/React/quiz-app/src/component/Login.js"],"sourcesContent":["import { Box, Button, Card, CardContent, TextField, Typography } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport { createAPIEndpoint, ENDPOINTS } from '../api';\r\nimport useForm from '../hooks/useForm'\r\nimport useStateContext from '../hooks/useStateContext';\r\n\r\nconst getFreshModel = () => ({\r\n    name: '',\r\n    email: ''\r\n})\r\nexport default function Login() {\r\n    const {context, setContext} = useStateContext();\r\n    const {        \r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors, \r\n    handleInputChange} = useForm(getFreshModel);\r\n\r\n    const Login = e => {\r\n        e.preventDefault();\r\n        if(validate())\r\n        createAPIEndpoint(ENDPOINTS.participant)\r\n        .post(values)\r\n        .then(res => {\r\n            setContext({participantId:res.data.participantId})\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const validate = () =>{\r\n        let temp = {}\r\n        temp.email = (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i).test(values.email) ? \"\" : \"Email is not valid.\"\r\n        temp.name = values.name != \"\" ? \"\" : \"This field is required.\"\r\n        setErrors(temp)\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n  return (\r\n    <center>\r\n        {context.participantId}\r\n    <Card sx={{width: 400}}>\r\n        <CardContent sx={{textAlign: \"center\" }}> \r\n        <Typography variant=\"h3\" sx={{ my: 3 }}> \r\n            Quiz App\r\n        </Typography>\r\n\r\n    <Box sx={{\r\n        '& .MuiTextField-root':{\r\n            m:1,\r\n            width: '90%'\r\n        }\r\n    }}>\r\n        \r\n    <form noValidate autoComplete=\"on\" onSubmit={Login}>\r\n        <TextField \r\n        label=\"Email\"\r\n        name=\"email\"\r\n        value={values.email}\r\n        onChange={handleInputChange}\r\n        variant=\"outlined\"\r\n        {...(errors.email && { error: true, helperText:errors.email })}/>\r\n        <TextField \r\n        label=\"Name\"\r\n        name=\"name\"\r\n        value={values.name}\r\n        onChange={handleInputChange}\r\n        variant=\"outlined\"\r\n        {...(errors.name && {error: true, helperText:errors.name})}/>\r\n        <Button \r\n        type = \"submit\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        sx={{width:'90'}}>Start</Button>\r\n        </form>\r\n        \r\n    </Box>\r\n    </CardContent>\r\n\r\n    </Card>\r\n    </center>\r\n\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}