[{"C:\\Users\\User\\source\\React\\quiz-app\\src\\index.js":"1","C:\\Users\\User\\source\\React\\quiz-app\\src\\App.js":"2","C:\\Users\\User\\source\\React\\quiz-app\\src\\reportWebVitals.js":"3","C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\login.js":"4","C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\Login.js":"5","C:\\Users\\User\\source\\React\\quiz-app\\src\\hooks\\useForm.js":"6","C:\\Users\\User\\source\\React\\quiz-app\\src\\api\\index.js":"7","C:\\Users\\User\\source\\React\\quiz-app\\src\\hooks\\useStateContext.js":"8","C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\Quiz.js":"9","C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\Result.js":"10","C:\\Users\\User\\source\\React\\quiz-app\\src\\helper\\index.js":"11","C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\Layout.js":"12","C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\Authenticate.js":"13","C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\Answer.js":"14"},{"size":891,"mtime":1670755943622,"results":"15","hashOfConfig":"16"},{"size":658,"mtime":1670846077477,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1670498754333,"results":"18","hashOfConfig":"16"},{"size":1955,"mtime":1670508613289,"results":"19","hashOfConfig":"16"},{"size":2521,"mtime":1670837259717,"results":"20","hashOfConfig":"16"},{"size":495,"mtime":1670506152122,"results":"21","hashOfConfig":"16"},{"size":591,"mtime":1670839873090,"results":"22","hashOfConfig":"16"},{"size":1138,"mtime":1670840051501,"results":"23","hashOfConfig":"16"},{"size":2604,"mtime":1670839346232,"results":"24","hashOfConfig":"16"},{"size":3331,"mtime":1670846309206,"results":"25","hashOfConfig":"16"},{"size":158,"mtime":1670779083009,"results":"26","hashOfConfig":"16"},{"size":842,"mtime":1670838553102,"results":"27","hashOfConfig":"16"},{"size":317,"mtime":1670846010131,"results":"28","hashOfConfig":"16"},{"size":2243,"mtime":1670846388384,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"sn7e6y",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\source\\React\\quiz-app\\src\\index.js",[],[],[],"C:\\Users\\User\\source\\React\\quiz-app\\src\\App.js",[],[],"C:\\Users\\User\\source\\React\\quiz-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\login.js",[],[],"C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\Login.js",["75","76","77","78"],[],"C:\\Users\\User\\source\\React\\quiz-app\\src\\hooks\\useForm.js",[],[],"C:\\Users\\User\\source\\React\\quiz-app\\src\\api\\index.js",[],[],"C:\\Users\\User\\source\\React\\quiz-app\\src\\hooks\\useStateContext.js",[],[],"C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\Quiz.js",["79","80"],[],"import { Card, CardContent, CardHeader, CardMedia, List, ListItemButton, Typography, Box, LinearProgress } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { createAPIEndpoint, ENDPOINTS, BASE_URL } from '../api'\r\nimport { getFormatedTime } from '../helper'\r\nimport useStateContext from '../hooks/useStateContext'\r\n\r\n\r\nexport default function Quiz() {\r\n\r\n  const[qns,setQns] = useState([])\r\n  const[qnIndex, setQnIndex] = useState(0)\r\n  const[timeTaken, setTImeTaken] = useState(0)\r\n  const {context, setContext} = useStateContext()\r\n  const navigate = useNavigate()\r\n  let timer;\r\n\r\nconst startTimer =()=>{\r\n  timer = setInterval(()=>{\r\n    setTImeTaken(prev => prev +1)\r\n  }, [1000])\r\n}\r\n\r\n  useEffect(()=>{\r\n    setContext({\r\n      timeTaken:0,\r\n      selectedOptions:[]\r\n    })\r\n    createAPIEndpoint(ENDPOINTS.question)\r\n    .fetch()\r\n    .then(res =>{\r\n      setQns(res.data)\r\n      startTimer()\r\n    })\r\n    .catch(err=>{console.log(err);})\r\n    return () => {clearInterval(timer)}\r\n  }, [])\r\n\r\n  const updateAnswer =(qnId, optionIdx)=>{\r\n    const temp = [...context.selectedOptions]\r\n   temp.push({\r\n    qnId,\r\n    selected:optionIdx\r\n   }) \r\n\r\n   if(qnIndex <4){\r\n    setContext({selectedOptions:[...temp]})\r\n    setQnIndex(qnIndex+1)\r\n   }\r\n   else{\r\n    setContext({selectedOptions:[...temp].timeTaken })\r\n    navigate(\"/resut\")\r\n   }\r\n\r\n\r\n  }\r\n\r\n  return(\r\n    qns.length !=0\r\n    ?<Card>\r\n      sx ={{maxWidth:640, mx:'auto', mt:5,\r\n    '& .MuiCardHeader-action':{m:0, alignSelf:'center'}}}\r\n      <CardHeader\r\n      title={'Question' + (qnIndex + 1) + 'of 5'}\r\n      action={<Typography>{getFormatedTime(timeTaken)}</Typography>}/>\r\n      <Box>\r\n                    <LinearProgress variant=\"determinate\" value={(qnIndex + 1) * 100 / 5} />\r\n                </Box>\r\n      {qns[qnIndex].imageName != null\r\n      ?<CardMedia\r\n    component=\"img\"\r\n  image={BASE_URL + \"images/\" + qns[qnIndex].imageName}\r\n  sx={{width:'auto', m:'10px auto'}}/>\r\n:null}\r\n\r\n      <CardContent>\r\n        <Typography variant='h6'>\r\n          {qns[qnIndex].qnInwords}\r\n        </Typography>\r\n        <List>\r\n          {qns[qnIndex].options.map((item, idx) =>\r\n          <ListItemButton key ={idx} onCLick={()=>updateAnswer(qns[qnIndex].qnId.idx)}>\r\n            <div>\r\n              <b>{String.fromCharCode(65+idx)+\" . \"}</b>{item}\r\n            </div>\r\n          </ListItemButton>)}\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n    : null\r\n  )\r\n\r\n  // console.log(context);\r\n  // return (\r\n  //   <div>Question</div>\r\n  // )\r\n}\r\n","C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\Result.js",["81","82","83"],[],"import React, {useEffect, useState} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { createAPIEndpoint, ENDPOINTS } from '../api'\r\nimport useStateContext from '../hooks/useStateContext'\r\nimport { green } from '@mui/material/colors'\r\nimport { Alert, Button, Card, CardContent, CardMedia, Typography } from '@mui/material';\r\nimport { getFormatedTime } from '../helper'\r\nimport { Box } from '@mui/system'\r\nimport Answer from './Answer'\r\n\r\nexport default function Result() {\r\nconst {context, setContext} = useStateContext()\r\nconst [score, setScore] = useState(0)\r\nconst [qnAnswers, setAnswers]= useState([])\r\nconst [showAlert, setShowAlert] =useState(false)\r\nconst navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n const ids = context.selectedOptions.max(x=>x.qnId)\r\n createAPIEndpoint(ENDPOINTS.getAnswers)\r\n .post(ids)\r\n .then(res=>{\r\nconst qna = context.selectedOptions\r\n.map(x => ({\r\n  ...x,\r\n  ...(res.data.find(y=>y.qnId == x.qnId))\r\n}))\r\nsetAnswers(qna)\r\ncalculateScore(qna)\r\n})\r\n .catch(err=>console.log(err))\r\n  }, [])\r\n  \r\nconst calculateScore =qna=>{\r\n  let tempScore = qna.reduce((acc, curr) => {\r\n    return curr.answer == curr.selected?acc + 1 : acc;\r\n  }, 0)\r\n  setScore(tempScore)\r\n}\r\n\r\nconst restart =()=>{\r\nsetContext({\r\n  timeTaken: 0,\r\n  selectedOptions: []\r\n})\r\nnavigate(\"/quiz\")\r\n}\r\n\r\nconst submitScore =()=> {\r\n  createAPIEndpoint(ENDPOINTS.participant)\r\n  .put(context.participantId,{\r\n    participantId: context.participantId,\r\n    score: score,\r\n    timeTaken: context.timeTaken\r\n  })\r\n  .then(res => {\r\n    setShowAlert(true)\r\n    setTimeout(()=> {\r\nsetShowAlert(false)\r\n    }, 4000);\r\n  })\r\n  .catch(err => {console.log(err)})\r\n}\r\n  return (\r\n    <>\r\n     <Card sx={{ mt: 5, display: 'flex', width: '100%', maxWidth: 640, mx: 'auto' }}>\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\r\n          <CardContent sx={{ flex: '1 0 auto', textAlign: 'center' }}>\r\n            <Typography variant=\"h4\">Congratulations!</Typography>\r\n            <Typography variant=\"h6\">\r\n              YOUR SCORE\r\n            </Typography>\r\n            <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\r\n              <Typography variant=\"span\" color={green[500]}>\r\n                {score}\r\n              </Typography>/5\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              Took {getFormatedTime(context.timeTaken) + ' mins'}\r\n            </Typography>\r\n            <Button variant=\"contained\"\r\n              sx={{ mx: 1 }}\r\n              size=\"small\"\r\n              onClick={submitScore}>\r\n              Submit\r\n            </Button>\r\n            <Button variant=\"contained\"\r\n              sx={{ mx: 1 }}\r\n              size=\"small\"\r\n              onClick={restart}>\r\n              Re-try\r\n            </Button>\r\n            <Alert\r\n              severity=\"success\"\r\n              variant=\"string\"\r\n              sx={{\r\n                width: '60%',\r\n                m: 'auto',\r\n                visibility: showAlert ? 'visible' : 'hidden'\r\n              }}>\r\n              Score Updated.\r\n            </Alert>\r\n          </CardContent>\r\n        </Box>\r\n        <CardMedia\r\n          component=\"img\"\r\n          sx={{ width: 220 }}\r\n          image=\"./result.png\"\r\n        />\r\n      </Card>\r\n      <Answer qnAnswers={qnAnswers} />\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\User\\source\\React\\quiz-app\\src\\helper\\index.js",[],[],"C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\Layout.js",[],[],"C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\Authenticate.js",["84"],[],"C:\\Users\\User\\source\\React\\quiz-app\\src\\component\\Answer.js",["85","86","87","88","89"],[],{"ruleId":"90","severity":1,"message":"91","line":17,"column":9,"nodeType":"92","messageId":"93","endLine":17,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":24,"column":4,"nodeType":"96","endLine":24,"endColumn":6,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":42,"column":33,"nodeType":"100","messageId":"101","endLine":42,"endColumn":35},{"ruleId":"98","severity":1,"message":"102","line":44,"column":49,"nodeType":"100","messageId":"101","endLine":44,"endColumn":51},{"ruleId":"94","severity":1,"message":"103","line":37,"column":6,"nodeType":"96","endLine":37,"endColumn":8,"suggestions":"104"},{"ruleId":"98","severity":1,"message":"99","line":59,"column":16,"nodeType":"100","messageId":"101","endLine":59,"endColumn":18},{"ruleId":"98","severity":1,"message":"102","line":26,"column":31,"nodeType":"100","messageId":"101","endLine":26,"endColumn":33},{"ruleId":"94","severity":1,"message":"105","line":32,"column":6,"nodeType":"96","endLine":32,"endColumn":8,"suggestions":"106"},{"ruleId":"98","severity":1,"message":"102","line":36,"column":24,"nodeType":"100","messageId":"101","endLine":36,"endColumn":26},{"ruleId":"98","severity":1,"message":"102","line":8,"column":27,"nodeType":"100","messageId":"101","endLine":8,"endColumn":29},{"ruleId":"90","severity":1,"message":"107","line":1,"column":68,"nodeType":"92","messageId":"93","endLine":1,"endColumn":72},{"ruleId":"90","severity":1,"message":"108","line":6,"column":22,"nodeType":"92","messageId":"93","endLine":6,"endColumn":26},{"ruleId":"90","severity":1,"message":"109","line":16,"column":11,"nodeType":"92","messageId":"93","endLine":16,"endColumn":27},{"ruleId":"98","severity":1,"message":"102","line":18,"column":36,"nodeType":"100","messageId":"101","endLine":18,"endColumn":38},{"ruleId":"98","severity":1,"message":"102","line":31,"column":44,"nodeType":"100","messageId":"101","endLine":31,"endColumn":46},"no-unused-vars","'setValues' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resetContext'. Either include it or remove the dependency array.","ArrayExpression",["110"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'setContext', 'startTimer', and 'timer'. Either include them or remove the dependency array.",["111"],"React Hook useEffect has a missing dependency: 'context.selectedOptions'. Either include it or remove the dependency array.",["112"],"'Chip' is defined but never used.","'grey' is defined but never used.","'markCorrectOrNot' is assigned a value but never used.",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [resetContext]",{"range":"119","text":"120"},"Update the dependencies array to be: [setContext, startTimer, timer]",{"range":"121","text":"122"},"Update the dependencies array to be: [context.selectedOptions]",{"range":"123","text":"124"},[728,730],"[resetContext]",[1075,1077],"[setContext, startTimer, timer]",[1042,1044],"[context.selectedOptions]"]